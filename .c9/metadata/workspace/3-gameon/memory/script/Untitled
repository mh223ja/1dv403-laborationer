{"changed":true,"filter":false,"title":"Untitled","tooltip":"/3-gameon/memory/script/Untitled","value":"\"use strict\"\n\nvar newDiv = null;\nvar innerDiv = null;\nvar table = null;\nvar row = null;\nvar cell = null;\nvar aTag = null;\nvar image = null;\n\n// Use this to put class names on the images.\nvar boxCounter = 0;\n\n// Static memory-object.\nvar Memory = {\n\n    memoryArray: [],\n\n    init: function (e) {\n\n        // Calls a separate js-file which generates a random numbers.\n        Memory.memoryArray = RandomGenerator.getPictureArray(4, 4);\n\n        // Calls the rendering method\n        Memory.renderArray(Memory.memoryArray);\n    },\n\n    renderArray: function (myArray) {\n\n        // Creates and places div-tags in the HTML-document.\n        newDiv = document.createElement(\"div\");\n        document.getElementsByTagName(\"body\")[0].appendChild(newDiv);\n        innerDiv = document.createElement(\"div\");\n        newDiv.appendChild(innerDiv);\n\n        // Creates a table and places it in the HTML-document.\n        table = document.createElement(\"table\");\n        table.border = 1;\n\n        // Generates rows and cells, swap the 4's to change the size of the gameboard.\n        for (var i = 0; i < 4; ++i) {\n            row = document.createElement(\"tr\");\n            table.appendChild(row);\n\n            // Creates a cell, each with its own respective random number.\n            for (var j = 0; j < 4; ++j) {\n                cell = document.createElement(\"td\");\n\n                // Adds a \"Question-mark\"-picture to the cell and places them in a-tags.\n                image = document.createElement(\"img\");\n                image.className = myArray[i * 4 + j];\n                image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/0.png?raw=true\";\n                aTag = document.createElement(\"a\");\n                aTag.onclick = function () {\n\n                    Memory.flipTile(image.className);\n                };\n\n                // Places the pictures in the document, along with its random number for easier testing purposes.\n                aTag.appendChild(document.createTextNode(myArray[i * 4 + j]));\n                aTag.appendChild(image);\n                cell.appendChild(aTag);\n                row.appendChild(cell);\n            };\n        };\n        innerDiv.appendChild(table);\n\n    },\n\n    flipTile: function (imageClass) {\n        console.log(imageClass);\n\n        // This should flip the tiles if the number matches the class name.\n        if (imageClass == 1) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/1.png?raw=true\";\n        };\n        if (imageClass == 2) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/2.png?raw=true\";\n        };\n        if (imageClass == 3) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/3.png?raw=true\";\n        };\n        if (imageClass == 4) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/4.png?raw=true\";\n        };\n        if (imageClass == 5) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/5.png?raw=true\";\n        };\n        if (imageClass == 6) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/6.png?raw=true\";\n        };\n        if (imageClass == 7) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/7.png?raw=true\";\n        };\n        if (imageClass == 8) {\n            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/8.png?raw=true\";\n        };\n\n    }\n\n};\nwindow.onload = Memory.init;","undoManager":{"mark":-1,"position":0,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":101,"column":28},"action":"insert","lines":["\"use strict\"","","var newDiv = null;","var innerDiv = null;","var table = null;","var row = null;","var cell = null;","var aTag = null;","var image = null;","","// Use this to put class names on the images.","var boxCounter = 0;","","// Static memory-object.","var Memory = {","","    memoryArray: [],","","    init: function (e) {","","        // Calls a separate js-file which generates a random numbers.","        Memory.memoryArray = RandomGenerator.getPictureArray(4, 4);","","        // Calls the rendering method","        Memory.renderArray(Memory.memoryArray);","    },","","    renderArray: function (myArray) {","","        // Creates and places div-tags in the HTML-document.","        newDiv = document.createElement(\"div\");","        document.getElementsByTagName(\"body\")[0].appendChild(newDiv);","        innerDiv = document.createElement(\"div\");","        newDiv.appendChild(innerDiv);","","        // Creates a table and places it in the HTML-document.","        table = document.createElement(\"table\");","        table.border = 1;","","        // Generates rows and cells, swap the 4's to change the size of the gameboard.","        for (var i = 0; i < 4; ++i) {","            row = document.createElement(\"tr\");","            table.appendChild(row);","","            // Creates a cell, each with its own respective random number.","            for (var j = 0; j < 4; ++j) {","                cell = document.createElement(\"td\");","","                // Adds a \"Question-mark\"-picture to the cell and places them in a-tags.","                image = document.createElement(\"img\");","                image.className = myArray[i * 4 + j];","                image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/0.png?raw=true\";","                aTag = document.createElement(\"a\");","                aTag.onclick = function () {","","                    Memory.flipTile(image.className);","                };","","                // Places the pictures in the document, along with its random number for easier testing purposes.","                aTag.appendChild(document.createTextNode(myArray[i * 4 + j]));","                aTag.appendChild(image);","                cell.appendChild(aTag);","                row.appendChild(cell);","            };","        };","        innerDiv.appendChild(table);","","    },","","    flipTile: function (imageClass) {","        console.log(imageClass);","","        // This should flip the tiles if the number matches the class name.","        if (imageClass == 1) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/1.png?raw=true\";","        };","        if (imageClass == 2) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/2.png?raw=true\";","        };","        if (imageClass == 3) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/3.png?raw=true\";","        };","        if (imageClass == 4) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/4.png?raw=true\";","        };","        if (imageClass == 5) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/5.png?raw=true\";","        };","        if (imageClass == 6) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/6.png?raw=true\";","        };","        if (imageClass == 7) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/7.png?raw=true\";","        };","        if (imageClass == 8) {","            image.src = \"https://github.com/1dv403/1dv403-laborationer/blob/master/3-gameon/memory/pics/8.png?raw=true\";","        };","","    }","","};","window.onload = Memory.init;"]}]}]]},"ace":{"folds":[],"scrolltop":1124,"scrollleft":0,"selection":{"start":{"row":101,"column":28},"end":{"row":101,"column":28},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":73,"state":"start","mode":"ace/mode/text"}},"timestamp":1418205441932}